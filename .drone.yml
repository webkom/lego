---
kind: pipeline
type: docker
name: default

trigger:
  event:
    exclude:
      - pull_request

steps:
  - name: setup
    image: abakus/lego-testbase:latest
    when:
      event: push
    environment:
      LANG: C.UTF-8
      CACHE: cache
    commands:
      - pdm run ci_settings
      - pdm venv activate in-project
      - pdm install

  - name: missing-migrations
    image: abakus/lego-testbase:latest
    when:
      event: push
    environment:
      LANG: C.UTF-8
      DATABASE: database
      CACHE: cache
    depends_on:
      - setup
    commands:
      - tox -e missing-migrations

  - name: tests
    image: abakus/lego-testbase:latest
    when:
      event: push
    environment:
      LANG: C.UTF-8
      DATABASE: database
      CACHE: cache
    depends_on:
      - setup
    commands:
      - tox -e tests -- --parallel

  - name: isort
    image: abakus/lego-testbase:latest
    when:
      event: push
    environment:
      LANG: C.UTF-8
    depends_on:
      - setup
    commands:
      - tox -e isort

  - name: flake8
    image: abakus/lego-testbase:latest
    when:
      event: push
    environment:
      LANG: C.UTF-8
    depends_on:
      - setup
    commands:
      - tox -e flake8

  - name: black
    image: abakus/lego-testbase:latest
    pull: true
    when:
      event: push
    environment:
      LANG: C.UTF-8
    depends_on:
      - setup
    commands:
      - tox -e black

  - name: mypy
    image: abakus/lego-testbase:latest
    pull: true
    when:
      event: push
    environment:
      LANG: C.UTF-8
    depends_on:
      - setup
    commands:
      - tox -e mypy

  - name: docs
    image: abakus/lego-testbase:latest
    when:
      event: push
    environment:
      LANG: C.UTF-8
    depends_on:
      - setup
    commands:
      - tox -e docs

  - name: coverage
    image: abakus/lego-testbase:latest
    when:
      event: push
    environment:
      LANG: C.UTF-8
      CACHE: cache
      CODECOV_TOKEN:
        from_secret: codecov_token
    depends_on:
      - tests
    commands:
      - tox -e coverage
      # Upload coverage to Codecov
      - codecov -t ${CODECOV_TOKEN} -f "coverage.xml"

  - name: docker
    image: plugins/docker
    when:
      branch:
        - build
      status: success
      event: push
    depends_on:
      - missing-migrations
      - tests
      - isort
      - flake8
      - black
      - mypy
      - docs
      - coverage
    environment:
      SENTRY_AUTH_TOKEN:
        from_secret: sentry_auth_token
    settings:
      registry: https://registry.webkom.dev
      repo: registry.webkom.dev/webkom/lego
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      tags:
        - version-${DRONE_COMMIT_SHA:0:7}
        - latest
      build_args:
        - RELEASE=version-${DRONE_COMMIT_SHA:0:7}
        - SENTRY_ORG=abakus
        - SENTRY_PROJECT=lego
      build_args_from_env:
        - SENTRY_AUTH_TOKEN

  - name: Deploy
    image: abakus/ansible-deploy
    settings:
      playbook: /infrastructure/lego/playbooks/deploy.yml
      repository:
        from_secret: infra_repository
      tags:
        - lego
        - ci
      limit: ${DRONE_DEPLOY_TO}
      extra_vars: lego_version=version-${DRONE_COMMIT_SHA:0:7}
      inventory: /infrastructure/inventory
      vault_password:
        from_secret: ansible_vault_password
      private_key:
        from_secret: infra_deploy_key
    when:
      event:
        - promote
        - rollback
      branch:
        - build

services:
  - name: database
    image: postgres:12.3
    environment:
      POSTGRES_USER: lego
      POSTGRES_HOST_AUTH_METHOD: trust
  - name: cache
    image: redis

---
kind: signature
hmac: 122e3a0e796afbb024bdf63a098d46a1cf4d0e6f3b9859d1b476d585c1867179

...
