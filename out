DEBUG 2016-10-04 16:36:43,731 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_abakusgroup" WHERE "users_abakusgroup"."id" = 1 LIMIT 1; args=(1,)
DEBUG 2016-10-04 16:36:43,733 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_abakusgroup" WHERE "users_abakusgroup"."id" = 2 LIMIT 1; args=(2,)
DEBUG 2016-10-04 16:36:43,734 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_abakusgroup" WHERE "users_abakusgroup"."id" = 3 LIMIT 1; args=(3,)
DEBUG 2016-10-04 16:36:43,736 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_abakusgroup" WHERE "users_abakusgroup"."id" = 4 LIMIT 1; args=(4,)
DEBUG 2016-10-04 16:36:43,737 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_abakusgroup" WHERE "users_abakusgroup"."id" = 5 LIMIT 1; args=(5,)
DEBUG 2016-10-04 16:36:43,739 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_abakusgroup" WHERE "users_abakusgroup"."id" = 6 LIMIT 1; args=(6,)
DEBUG 2016-10-04 16:36:43,741 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_abakusgroup" WHERE "users_abakusgroup"."id" = 7 LIMIT 1; args=(7,)
DEBUG 2016-10-04 16:36:43,742 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_abakusgroup" WHERE "users_abakusgroup"."id" = 8 LIMIT 1; args=(8,)
DEBUG 2016-10-04 16:36:43,744 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_abakusgroup" WHERE "users_abakusgroup"."id" = 9 LIMIT 1; args=(9,)
DEBUG 2016-10-04 16:36:43,746 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_abakusgroup" WHERE "users_abakusgroup"."id" = 10 LIMIT 1; args=(10,)
DEBUG 2016-10-04 16:36:43,747 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_abakusgroup" WHERE "users_abakusgroup"."id" = 11 LIMIT 1; args=(11,)
DEBUG 2016-10-04 16:36:43,751 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 1) LIMIT 1; args=(False, 1)
DEBUG 2016-10-04 16:36:43,756 [django.db.backends] (0.001) SELECT "users_user"."id", "users_user"."password", "users_user"."last_login", "users_user"."deleted", "users_user"."username", "users_user"."first_name", "users_user"."last_name", "users_user"."email", "users_user"."is_active", "users_user"."date_joined" FROM "users_user" WHERE ("users_user"."deleted" = false AND UPPER("users_user"."username"::text) = UPPER('webkom')); args=(False, 'webkom')
DEBUG 2016-10-04 16:36:43,759 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_membership" WHERE ("users_membership"."deleted" = false AND "users_membership"."id" = 1) LIMIT 1; args=(False, 1)
DEBUG 2016-10-04 16:36:43,761 [django.db.backends] (0.001) SELECT "users_user"."id", "users_user"."password", "users_user"."last_login", "users_user"."deleted", "users_user"."username", "users_user"."first_name", "users_user"."last_name", "users_user"."email", "users_user"."is_active", "users_user"."date_joined" FROM "users_user" WHERE ("users_user"."deleted" = false AND UPPER("users_user"."username"::text) = UPPER('webkom')); args=(False, 'webkom')
DEBUG 2016-10-04 16:36:43,763 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_membership" WHERE ("users_membership"."deleted" = false AND "users_membership"."id" = 3) LIMIT 1; args=(False, 3)
DEBUG 2016-10-04 16:36:43,856 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 1) LIMIT 1; args=(False, 1)
DEBUG 2016-10-04 16:36:43,858 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 2) LIMIT 1; args=(False, 2)
DEBUG 2016-10-04 16:36:43,860 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 3) LIMIT 1; args=(False, 3)
DEBUG 2016-10-04 16:36:43,861 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 4) LIMIT 1; args=(False, 4)
DEBUG 2016-10-04 16:36:43,863 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 5) LIMIT 1; args=(False, 5)
DEBUG 2016-10-04 16:36:43,865 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 6) LIMIT 1; args=(False, 6)
DEBUG 2016-10-04 16:36:43,866 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 7) LIMIT 1; args=(False, 7)
DEBUG 2016-10-04 16:36:43,868 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 8) LIMIT 1; args=(False, 8)
DEBUG 2016-10-04 16:36:43,870 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 9) LIMIT 1; args=(False, 9)
DEBUG 2016-10-04 16:36:43,872 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 10) LIMIT 1; args=(False, 10)
DEBUG 2016-10-04 16:36:43,873 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 11) LIMIT 1; args=(False, 11)
DEBUG 2016-10-04 16:36:43,875 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 12) LIMIT 1; args=(False, 12)
DEBUG 2016-10-04 16:36:43,877 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 13) LIMIT 1; args=(False, 13)
DEBUG 2016-10-04 16:36:43,878 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 14) LIMIT 1; args=(False, 14)
DEBUG 2016-10-04 16:36:43,880 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 15) LIMIT 1; args=(False, 15)
DEBUG 2016-10-04 16:36:43,882 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 16) LIMIT 1; args=(False, 16)
DEBUG 2016-10-04 16:36:43,884 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 17) LIMIT 1; args=(False, 17)
DEBUG 2016-10-04 16:36:43,886 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 18) LIMIT 1; args=(False, 18)
DEBUG 2016-10-04 16:36:43,888 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 19) LIMIT 1; args=(False, 19)
DEBUG 2016-10-04 16:36:43,889 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 20) LIMIT 1; args=(False, 20)
DEBUG 2016-10-04 16:36:43,891 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 21) LIMIT 1; args=(False, 21)
DEBUG 2016-10-04 16:36:43,893 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 22) LIMIT 1; args=(False, 22)
DEBUG 2016-10-04 16:36:43,895 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 23) LIMIT 1; args=(False, 23)
DEBUG 2016-10-04 16:36:43,897 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 24) LIMIT 1; args=(False, 24)
DEBUG 2016-10-04 16:36:43,898 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 25) LIMIT 1; args=(False, 25)
DEBUG 2016-10-04 16:36:43,900 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 26) LIMIT 1; args=(False, 26)
DEBUG 2016-10-04 16:36:43,902 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 27) LIMIT 1; args=(False, 27)
DEBUG 2016-10-04 16:36:43,904 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 28) LIMIT 1; args=(False, 28)
DEBUG 2016-10-04 16:36:43,906 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 29) LIMIT 1; args=(False, 29)
DEBUG 2016-10-04 16:36:43,908 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 30) LIMIT 1; args=(False, 30)
DEBUG 2016-10-04 16:36:43,910 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 31) LIMIT 1; args=(False, 31)
DEBUG 2016-10-04 16:36:43,912 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 32) LIMIT 1; args=(False, 32)
DEBUG 2016-10-04 16:36:43,914 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 33) LIMIT 1; args=(False, 33)
DEBUG 2016-10-04 16:36:43,916 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 34) LIMIT 1; args=(False, 34)
DEBUG 2016-10-04 16:36:43,917 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 35) LIMIT 1; args=(False, 35)
DEBUG 2016-10-04 16:36:43,919 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 36) LIMIT 1; args=(False, 36)
DEBUG 2016-10-04 16:36:43,921 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 37) LIMIT 1; args=(False, 37)
DEBUG 2016-10-04 16:36:43,923 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 38) LIMIT 1; args=(False, 38)
DEBUG 2016-10-04 16:36:43,924 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 39) LIMIT 1; args=(False, 39)
DEBUG 2016-10-04 16:36:43,926 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 40) LIMIT 1; args=(False, 40)
DEBUG 2016-10-04 16:36:43,928 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 41) LIMIT 1; args=(False, 41)
DEBUG 2016-10-04 16:36:43,930 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 42) LIMIT 1; args=(False, 42)
DEBUG 2016-10-04 16:36:43,931 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 43) LIMIT 1; args=(False, 43)
DEBUG 2016-10-04 16:36:43,933 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 44) LIMIT 1; args=(False, 44)
DEBUG 2016-10-04 16:36:43,935 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 45) LIMIT 1; args=(False, 45)
DEBUG 2016-10-04 16:36:43,937 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 46) LIMIT 1; args=(False, 46)
DEBUG 2016-10-04 16:36:43,939 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 47) LIMIT 1; args=(False, 47)
DEBUG 2016-10-04 16:36:43,941 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 48) LIMIT 1; args=(False, 48)
DEBUG 2016-10-04 16:36:43,942 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 49) LIMIT 1; args=(False, 49)
DEBUG 2016-10-04 16:36:43,944 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 50) LIMIT 1; args=(False, 50)
DEBUG 2016-10-04 16:36:43,946 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 51) LIMIT 1; args=(False, 51)
DEBUG 2016-10-04 16:36:43,948 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "users_user" WHERE ("users_user"."deleted" = false AND "users_user"."id" = 52) LIMIT 1; args=(False, 52)
DEBUG 2016-10-04 16:36:43,990 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 1) LIMIT 1; args=(False, 1)
DEBUG 2016-10-04 16:36:43,992 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 2) LIMIT 1; args=(False, 2)
DEBUG 2016-10-04 16:36:43,994 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 3) LIMIT 1; args=(False, 3)
DEBUG 2016-10-04 16:36:43,996 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 1) LIMIT 1; args=(False, 1)
DEBUG 2016-10-04 16:36:43,998 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 1) LIMIT 1; args=(False, 1)
DEBUG 2016-10-04 16:36:44,000 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 2) LIMIT 1; args=(False, 2)
DEBUG 2016-10-04 16:36:44,001 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 3) LIMIT 1; args=(False, 3)
DEBUG 2016-10-04 16:36:44,003 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 4) LIMIT 1; args=(False, 4)
DEBUG 2016-10-04 16:36:44,006 [django.db.backends] (0.001) UPDATE "bdb_semesterstatus" SET "created_at" = '2016-10-04T16:36:44.002500+00:00'::timestamptz, "updated_at" = '2016-10-04T16:36:44.002514+00:00'::timestamptz, "deleted" = false, "created_by_id" = NULL, "updated_by_id" = NULL, "year" = 2017, "semester" = 1, "contacted_status" = 3, "company_id" = 1 WHERE "bdb_semesterstatus"."id" = 4; args=(datetime.datetime(2016, 10, 4, 16, 36, 44, 2500, tzinfo=<UTC>), datetime.datetime(2016, 10, 4, 16, 36, 44, 2514, tzinfo=<UTC>), False, 2017, 1, 3, 1, 4)
DEBUG 2016-10-04 16:36:44,052 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 5) LIMIT 1; args=(False, 5)
DEBUG 2016-10-04 16:36:44,054 [django.db.backends] (0.001) UPDATE "bdb_semesterstatus" SET "created_at" = '2016-10-04T16:36:44.051238+00:00'::timestamptz, "updated_at" = '2016-10-04T16:36:44.051254+00:00'::timestamptz, "deleted" = false, "created_by_id" = NULL, "updated_by_id" = NULL, "year" = 2018, "semester" = 0, "contacted_status" = 4, "company_id" = 1 WHERE "bdb_semesterstatus"."id" = 5; args=(datetime.datetime(2016, 10, 4, 16, 36, 44, 51238, tzinfo=<UTC>), datetime.datetime(2016, 10, 4, 16, 36, 44, 51254, tzinfo=<UTC>), False, 2018, 0, 4, 1, 5)
DEBUG 2016-10-04 16:36:44,064 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 6) LIMIT 1; args=(False, 6)
DEBUG 2016-10-04 16:36:44,066 [django.db.backends] (0.001) UPDATE "bdb_semesterstatus" SET "created_at" = '2016-10-04T16:36:44.062918+00:00'::timestamptz, "updated_at" = '2016-10-04T16:36:44.062935+00:00'::timestamptz, "deleted" = false, "created_by_id" = NULL, "updated_by_id" = NULL, "year" = 2018, "semester" = 1, "contacted_status" = 5, "company_id" = 1 WHERE "bdb_semesterstatus"."id" = 6; args=(datetime.datetime(2016, 10, 4, 16, 36, 44, 62918, tzinfo=<UTC>), datetime.datetime(2016, 10, 4, 16, 36, 44, 62935, tzinfo=<UTC>), False, 2018, 1, 5, 1, 6)
DEBUG 2016-10-04 16:36:44,074 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 7) LIMIT 1; args=(False, 7)
DEBUG 2016-10-04 16:36:44,076 [django.db.backends] (0.001) UPDATE "bdb_semesterstatus" SET "created_at" = '2016-10-04T16:36:44.073269+00:00'::timestamptz, "updated_at" = '2016-10-04T16:36:44.073285+00:00'::timestamptz, "deleted" = false, "created_by_id" = NULL, "updated_by_id" = NULL, "year" = 2015, "semester" = 1, "contacted_status" = 1, "company_id" = 1 WHERE "bdb_semesterstatus"."id" = 7; args=(datetime.datetime(2016, 10, 4, 16, 36, 44, 73269, tzinfo=<UTC>), datetime.datetime(2016, 10, 4, 16, 36, 44, 73285, tzinfo=<UTC>), False, 2015, 1, 1, 1, 7)
DEBUG 2016-10-04 16:36:44,086 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 1) LIMIT 1; args=(False, 1)
DEBUG 2016-10-04 16:36:44,088 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 2) LIMIT 1; args=(False, 2)
DEBUG 2016-10-04 16:36:44,090 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 3) LIMIT 1; args=(False, 3)
DEBUG 2016-10-04 16:36:44,092 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 2) LIMIT 1; args=(False, 2)
DEBUG 2016-10-04 16:36:44,094 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 8) LIMIT 1; args=(False, 8)
DEBUG 2016-10-04 16:36:44,096 [django.db.backends] (0.001) UPDATE "bdb_semesterstatus" SET "created_at" = '2016-10-04T16:36:44.093313+00:00'::timestamptz, "updated_at" = '2016-10-04T16:36:44.093325+00:00'::timestamptz, "deleted" = false, "created_by_id" = NULL, "updated_by_id" = NULL, "year" = 2016, "semester" = 0, "contacted_status" = 5, "company_id" = 2 WHERE "bdb_semesterstatus"."id" = 8; args=(datetime.datetime(2016, 10, 4, 16, 36, 44, 93313, tzinfo=<UTC>), datetime.datetime(2016, 10, 4, 16, 36, 44, 93325, tzinfo=<UTC>), False, 2016, 0, 5, 2, 8)
DEBUG 2016-10-04 16:36:44,109 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 9) LIMIT 1; args=(False, 9)
DEBUG 2016-10-04 16:36:44,111 [django.db.backends] (0.001) UPDATE "bdb_semesterstatus" SET "created_at" = '2016-10-04T16:36:44.107340+00:00'::timestamptz, "updated_at" = '2016-10-04T16:36:44.107366+00:00'::timestamptz, "deleted" = false, "created_by_id" = NULL, "updated_by_id" = NULL, "year" = 2016, "semester" = 1, "contacted_status" = 4, "company_id" = 2 WHERE "bdb_semesterstatus"."id" = 9; args=(datetime.datetime(2016, 10, 4, 16, 36, 44, 107340, tzinfo=<UTC>), datetime.datetime(2016, 10, 4, 16, 36, 44, 107366, tzinfo=<UTC>), False, 2016, 1, 4, 2, 9)
DEBUG 2016-10-04 16:36:44,120 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 10) LIMIT 1; args=(False, 10)
DEBUG 2016-10-04 16:36:44,122 [django.db.backends] (0.001) UPDATE "bdb_semesterstatus" SET "created_at" = '2016-10-04T16:36:44.118588+00:00'::timestamptz, "updated_at" = '2016-10-04T16:36:44.118610+00:00'::timestamptz, "deleted" = false, "created_by_id" = NULL, "updated_by_id" = NULL, "year" = 2017, "semester" = 0, "contacted_status" = 3, "company_id" = 2 WHERE "bdb_semesterstatus"."id" = 10; args=(datetime.datetime(2016, 10, 4, 16, 36, 44, 118588, tzinfo=<UTC>), datetime.datetime(2016, 10, 4, 16, 36, 44, 118610, tzinfo=<UTC>), False, 2017, 0, 3, 2, 10)
DEBUG 2016-10-04 16:36:44,130 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 11) LIMIT 1; args=(False, 11)
DEBUG 2016-10-04 16:36:44,132 [django.db.backends] (0.001) UPDATE "bdb_semesterstatus" SET "created_at" = '2016-10-04T16:36:44.128967+00:00'::timestamptz, "updated_at" = '2016-10-04T16:36:44.128984+00:00'::timestamptz, "deleted" = false, "created_by_id" = NULL, "updated_by_id" = NULL, "year" = 2017, "semester" = 1, "contacted_status" = 2, "company_id" = 2 WHERE "bdb_semesterstatus"."id" = 11; args=(datetime.datetime(2016, 10, 4, 16, 36, 44, 128967, tzinfo=<UTC>), datetime.datetime(2016, 10, 4, 16, 36, 44, 128984, tzinfo=<UTC>), False, 2017, 1, 2, 2, 11)
DEBUG 2016-10-04 16:36:44,140 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 12) LIMIT 1; args=(False, 12)
DEBUG 2016-10-04 16:36:44,141 [django.db.backends] (0.001) UPDATE "bdb_semesterstatus" SET "created_at" = '2016-10-04T16:36:44.138841+00:00'::timestamptz, "updated_at" = '2016-10-04T16:36:44.138858+00:00'::timestamptz, "deleted" = false, "created_by_id" = NULL, "updated_by_id" = NULL, "year" = 2018, "semester" = 0, "contacted_status" = 1, "company_id" = 2 WHERE "bdb_semesterstatus"."id" = 12; args=(datetime.datetime(2016, 10, 4, 16, 36, 44, 138841, tzinfo=<UTC>), datetime.datetime(2016, 10, 4, 16, 36, 44, 138858, tzinfo=<UTC>), False, 2018, 0, 1, 2, 12)
DEBUG 2016-10-04 16:36:44,149 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 13) LIMIT 1; args=(False, 13)
DEBUG 2016-10-04 16:36:44,151 [django.db.backends] (0.001) UPDATE "bdb_semesterstatus" SET "created_at" = '2016-10-04T16:36:44.148356+00:00'::timestamptz, "updated_at" = '2016-10-04T16:36:44.148370+00:00'::timestamptz, "deleted" = false, "created_by_id" = NULL, "updated_by_id" = NULL, "year" = 2018, "semester" = 1, "contacted_status" = 0, "company_id" = 2 WHERE "bdb_semesterstatus"."id" = 13; args=(datetime.datetime(2016, 10, 4, 16, 36, 44, 148356, tzinfo=<UTC>), datetime.datetime(2016, 10, 4, 16, 36, 44, 148370, tzinfo=<UTC>), False, 2018, 1, 0, 2, 13)
DEBUG 2016-10-04 16:36:44,159 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 14) LIMIT 1; args=(False, 14)
DEBUG 2016-10-04 16:36:44,161 [django.db.backends] (0.001) UPDATE "bdb_semesterstatus" SET "created_at" = '2016-10-04T16:36:44.158260+00:00'::timestamptz, "updated_at" = '2016-10-04T16:36:44.158278+00:00'::timestamptz, "deleted" = false, "created_by_id" = NULL, "updated_by_id" = NULL, "year" = 2015, "semester" = 1, "contacted_status" = 4, "company_id" = 2 WHERE "bdb_semesterstatus"."id" = 14; args=(datetime.datetime(2016, 10, 4, 16, 36, 44, 158260, tzinfo=<UTC>), datetime.datetime(2016, 10, 4, 16, 36, 44, 158278, tzinfo=<UTC>), False, 2015, 1, 4, 2, 14)
DEBUG 2016-10-04 16:36:44,170 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 4) LIMIT 1; args=(False, 4)
DEBUG 2016-10-04 16:36:44,172 [django.db.backends] (0.001) UPDATE "events_event" SET "created_at" = '2016-10-04T16:36:44.168736+00:00'::timestamptz, "updated_at" = '2016-10-04T16:36:44.168753+00:00'::timestamptz, "deleted" = false, "created_by_id" = NULL, "updated_by_id" = NULL, "require_auth" = false, "title" = 'Bedpress med Facebook 1', "description" = '', "text" = 'TBA', "slug" = NULL, "event_type" = 0, "location" = 'F1', "start_time" = '2016-10-25T17:00:00+00:00'::timestamptz, "end_time" = '2016-10-27T20:00:00+00:00'::timestamptz, "merge_time" = NULL, "company_id" = 2 WHERE "events_event"."id" = 4; args=(datetime.datetime(2016, 10, 4, 16, 36, 44, 168736, tzinfo=<UTC>), datetime.datetime(2016, 10, 4, 16, 36, 44, 168753, tzinfo=<UTC>), False, False, 'Bedpress med Facebook 1', '', 'TBA', 0, 'F1', datetime.datetime(2016, 10, 25, 17, 0, tzinfo=<django.utils.timezone.FixedOffset object at 0x10c2f0cf8>), datetime.datetime(2016, 10, 27, 20, 0, tzinfo=<django.utils.timezone.FixedOffset object at 0x10c2f0dd8>), 2, 4)
DEBUG 2016-10-04 16:36:44,183 [django.db.backends] (0.002) SELECT "users_abakusgroup"."id" FROM "users_abakusgroup" INNER JOIN "events_event_can_view_groups" ON ("users_abakusgroup"."id" = "events_event_can_view_groups"."abakusgroup_id") WHERE "events_event_can_view_groups"."event_id" = 4 ORDER BY "users_abakusgroup"."tree_id" ASC, "users_abakusgroup"."lft" ASC; args=(4,)
DEBUG 2016-10-04 16:36:44,186 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 5) LIMIT 1; args=(False, 5)
DEBUG 2016-10-04 16:36:44,189 [django.db.backends] (0.001) UPDATE "events_event" SET "created_at" = '2016-10-04T16:36:44.185765+00:00'::timestamptz, "updated_at" = '2016-10-04T16:36:44.185778+00:00'::timestamptz, "deleted" = false, "created_by_id" = NULL, "updated_by_id" = NULL, "require_auth" = false, "title" = 'Bedpress med Facebook 2', "description" = '', "text" = 'Eyy', "slug" = NULL, "event_type" = 0, "location" = 'EL5', "start_time" = '2016-11-25T17:00:00+00:00'::timestamptz, "end_time" = '2016-11-27T20:00:00+00:00'::timestamptz, "merge_time" = NULL, "company_id" = 2 WHERE "events_event"."id" = 5; args=(datetime.datetime(2016, 10, 4, 16, 36, 44, 185765, tzinfo=<UTC>), datetime.datetime(2016, 10, 4, 16, 36, 44, 185778, tzinfo=<UTC>), False, False, 'Bedpress med Facebook 2', '', 'Eyy', 0, 'EL5', datetime.datetime(2016, 11, 25, 17, 0, tzinfo=<django.utils.timezone.FixedOffset object at 0x10c2f2518>), datetime.datetime(2016, 11, 27, 20, 0, tzinfo=<django.utils.timezone.FixedOffset object at 0x10c2f2630>), 2, 5)
DEBUG 2016-10-04 16:36:44,199 [django.db.backends] (0.001) SELECT "users_abakusgroup"."id" FROM "users_abakusgroup" INNER JOIN "events_event_can_view_groups" ON ("users_abakusgroup"."id" = "events_event_can_view_groups"."abakusgroup_id") WHERE "events_event_can_view_groups"."event_id" = 5 ORDER BY "users_abakusgroup"."tree_id" ASC, "users_abakusgroup"."lft" ASC; args=(5,)
DEBUG 2016-10-04 16:36:44,202 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 6) LIMIT 1; args=(False, 6)
DEBUG 2016-10-04 16:36:44,204 [django.db.backends] (0.001) UPDATE "events_event" SET "created_at" = '2016-10-04T16:36:44.201214+00:00'::timestamptz, "updated_at" = '2016-10-04T16:36:44.201228+00:00'::timestamptz, "deleted" = false, "created_by_id" = NULL, "updated_by_id" = NULL, "require_auth" = false, "title" = 'Bedpress med Facebook 3', "description" = '', "text" = 'TBA', "slug" = NULL, "event_type" = 0, "location" = 'R2', "start_time" = '2016-12-25T17:00:00+00:00'::timestamptz, "end_time" = '2016-12-27T20:00:00+00:00'::timestamptz, "merge_time" = NULL, "company_id" = 2 WHERE "events_event"."id" = 6; args=(datetime.datetime(2016, 10, 4, 16, 36, 44, 201214, tzinfo=<UTC>), datetime.datetime(2016, 10, 4, 16, 36, 44, 201228, tzinfo=<UTC>), False, False, 'Bedpress med Facebook 3', '', 'TBA', 0, 'R2', datetime.datetime(2016, 12, 25, 17, 0, tzinfo=<django.utils.timezone.FixedOffset object at 0x10c2f2e10>), datetime.datetime(2016, 12, 27, 20, 0, tzinfo=<django.utils.timezone.FixedOffset object at 0x10c2f2d68>), 2, 6)
DEBUG 2016-10-04 16:36:44,216 [django.db.backends] (0.001) SELECT "users_abakusgroup"."id" FROM "users_abakusgroup" INNER JOIN "events_event_can_view_groups" ON ("users_abakusgroup"."id" = "events_event_can_view_groups"."abakusgroup_id") WHERE "events_event_can_view_groups"."event_id" = 6 ORDER BY "users_abakusgroup"."tree_id" ASC, "users_abakusgroup"."lft" ASC; args=(6,)
DEBUG 2016-10-04 16:36:44,219 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 15) LIMIT 1; args=(False, 15)
DEBUG 2016-10-04 16:36:44,221 [django.db.backends] (0.001) UPDATE "bdb_semesterstatus" SET "created_at" = '2016-10-04T16:36:44.217921+00:00'::timestamptz, "updated_at" = '2016-10-04T16:36:44.217936+00:00'::timestamptz, "deleted" = false, "created_by_id" = NULL, "updated_by_id" = NULL, "year" = 2016, "semester" = 0, "contacted_status" = 3, "company_id" = 3 WHERE "bdb_semesterstatus"."id" = 15; args=(datetime.datetime(2016, 10, 4, 16, 36, 44, 217921, tzinfo=<UTC>), datetime.datetime(2016, 10, 4, 16, 36, 44, 217936, tzinfo=<UTC>), False, 2016, 0, 3, 3, 15)
DEBUG 2016-10-04 16:36:44,234 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 16) LIMIT 1; args=(False, 16)
DEBUG 2016-10-04 16:36:44,236 [django.db.backends] (0.001) UPDATE "bdb_semesterstatus" SET "created_at" = '2016-10-04T16:36:44.232497+00:00'::timestamptz, "updated_at" = '2016-10-04T16:36:44.232523+00:00'::timestamptz, "deleted" = false, "created_by_id" = NULL, "updated_by_id" = NULL, "year" = 2016, "semester" = 1, "contacted_status" = 0, "company_id" = 3 WHERE "bdb_semesterstatus"."id" = 16; args=(datetime.datetime(2016, 10, 4, 16, 36, 44, 232497, tzinfo=<UTC>), datetime.datetime(2016, 10, 4, 16, 36, 44, 232523, tzinfo=<UTC>), False, 2016, 1, 0, 3, 16)
DEBUG 2016-10-04 16:36:44,245 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 17) LIMIT 1; args=(False, 17)
DEBUG 2016-10-04 16:36:44,247 [django.db.backends] (0.001) UPDATE "bdb_semesterstatus" SET "created_at" = '2016-10-04T16:36:44.244493+00:00'::timestamptz, "updated_at" = '2016-10-04T16:36:44.244513+00:00'::timestamptz, "deleted" = false, "created_by_id" = NULL, "updated_by_id" = NULL, "year" = 2017, "semester" = 0, "contacted_status" = 1, "company_id" = 3 WHERE "bdb_semesterstatus"."id" = 17; args=(datetime.datetime(2016, 10, 4, 16, 36, 44, 244493, tzinfo=<UTC>), datetime.datetime(2016, 10, 4, 16, 36, 44, 244513, tzinfo=<UTC>), False, 2017, 0, 1, 3, 17)
DEBUG 2016-10-04 16:36:44,255 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 18) LIMIT 1; args=(False, 18)
DEBUG 2016-10-04 16:36:44,257 [django.db.backends] (0.001) UPDATE "bdb_semesterstatus" SET "created_at" = '2016-10-04T16:36:44.253731+00:00'::timestamptz, "updated_at" = '2016-10-04T16:36:44.253746+00:00'::timestamptz, "deleted" = false, "created_by_id" = NULL, "updated_by_id" = NULL, "year" = 2017, "semester" = 1, "contacted_status" = 6, "company_id" = 3 WHERE "bdb_semesterstatus"."id" = 18; args=(datetime.datetime(2016, 10, 4, 16, 36, 44, 253731, tzinfo=<UTC>), datetime.datetime(2016, 10, 4, 16, 36, 44, 253746, tzinfo=<UTC>), False, 2017, 1, 6, 3, 18)
DEBUG 2016-10-04 16:36:44,265 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 19) LIMIT 1; args=(False, 19)
DEBUG 2016-10-04 16:36:44,267 [django.db.backends] (0.001) UPDATE "bdb_semesterstatus" SET "created_at" = '2016-10-04T16:36:44.263928+00:00'::timestamptz, "updated_at" = '2016-10-04T16:36:44.263949+00:00'::timestamptz, "deleted" = false, "created_by_id" = NULL, "updated_by_id" = NULL, "year" = 2018, "semester" = 0, "contacted_status" = 5, "company_id" = 3 WHERE "bdb_semesterstatus"."id" = 19; args=(datetime.datetime(2016, 10, 4, 16, 36, 44, 263928, tzinfo=<UTC>), datetime.datetime(2016, 10, 4, 16, 36, 44, 263949, tzinfo=<UTC>), False, 2018, 0, 5, 3, 19)
DEBUG 2016-10-04 16:36:44,275 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 20) LIMIT 1; args=(False, 20)
DEBUG 2016-10-04 16:36:44,277 [django.db.backends] (0.001) UPDATE "bdb_semesterstatus" SET "created_at" = '2016-10-04T16:36:44.274354+00:00'::timestamptz, "updated_at" = '2016-10-04T16:36:44.274375+00:00'::timestamptz, "deleted" = false, "created_by_id" = NULL, "updated_by_id" = NULL, "year" = 2018, "semester" = 1, "contacted_status" = 3, "company_id" = 3 WHERE "bdb_semesterstatus"."id" = 20; args=(datetime.datetime(2016, 10, 4, 16, 36, 44, 274354, tzinfo=<UTC>), datetime.datetime(2016, 10, 4, 16, 36, 44, 274375, tzinfo=<UTC>), False, 2018, 1, 3, 3, 20)
DEBUG 2016-10-04 16:36:44,286 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "bdb_company" WHERE ("bdb_company"."deleted" = false AND "bdb_company"."id" = 21) LIMIT 1; args=(False, 21)
DEBUG 2016-10-04 16:36:44,288 [django.db.backends] (0.001) UPDATE "bdb_semesterstatus" SET "created_at" = '2016-10-04T16:36:44.285233+00:00'::timestamptz, "updated_at" = '2016-10-04T16:36:44.285249+00:00'::timestamptz, "deleted" = false, "created_by_id" = NULL, "updated_by_id" = NULL, "year" = 2015, "semester" = 1, "contacted_status" = 4, "company_id" = 3 WHERE "bdb_semesterstatus"."id" = 21; args=(datetime.datetime(2016, 10, 4, 16, 36, 44, 285233, tzinfo=<UTC>), datetime.datetime(2016, 10, 4, 16, 36, 44, 285249, tzinfo=<UTC>), False, 2015, 1, 4, 3, 21)
DEBUG 2016-10-04 16:36:44,629 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 1) LIMIT 1; args=(False, 1)
DEBUG 2016-10-04 16:36:44,631 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 2) LIMIT 1; args=(False, 2)
DEBUG 2016-10-04 16:36:44,633 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 3) LIMIT 1; args=(False, 3)
DEBUG 2016-10-04 16:36:44,635 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 4) LIMIT 1; args=(False, 4)
DEBUG 2016-10-04 16:36:44,637 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 5) LIMIT 1; args=(False, 5)
DEBUG 2016-10-04 16:36:44,639 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 6) LIMIT 1; args=(False, 6)
DEBUG 2016-10-04 16:36:44,641 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 7) LIMIT 1; args=(False, 7)
DEBUG 2016-10-04 16:36:44,643 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 8) LIMIT 1; args=(False, 8)
DEBUG 2016-10-04 16:36:44,644 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 9) LIMIT 1; args=(False, 9)
DEBUG 2016-10-04 16:36:44,646 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 10) LIMIT 1; args=(False, 10)
DEBUG 2016-10-04 16:36:44,648 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 11) LIMIT 1; args=(False, 11)
DEBUG 2016-10-04 16:36:44,650 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 12) LIMIT 1; args=(False, 12)
DEBUG 2016-10-04 16:36:44,652 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 13) LIMIT 1; args=(False, 13)
DEBUG 2016-10-04 16:36:44,654 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 14) LIMIT 1; args=(False, 14)
DEBUG 2016-10-04 16:36:44,656 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 15) LIMIT 1; args=(False, 15)
DEBUG 2016-10-04 16:36:44,658 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 16) LIMIT 1; args=(False, 16)
DEBUG 2016-10-04 16:36:44,660 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 17) LIMIT 1; args=(False, 17)
DEBUG 2016-10-04 16:36:44,662 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 18) LIMIT 1; args=(False, 18)
DEBUG 2016-10-04 16:36:44,664 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 19) LIMIT 1; args=(False, 19)
DEBUG 2016-10-04 16:36:44,666 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 20) LIMIT 1; args=(False, 20)
DEBUG 2016-10-04 16:36:44,668 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 21) LIMIT 1; args=(False, 21)
DEBUG 2016-10-04 16:36:44,670 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 22) LIMIT 1; args=(False, 22)
DEBUG 2016-10-04 16:36:44,672 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 23) LIMIT 1; args=(False, 23)
DEBUG 2016-10-04 16:36:44,674 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 24) LIMIT 1; args=(False, 24)
DEBUG 2016-10-04 16:36:44,676 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 25) LIMIT 1; args=(False, 25)
DEBUG 2016-10-04 16:36:44,678 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 26) LIMIT 1; args=(False, 26)
DEBUG 2016-10-04 16:36:44,680 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 27) LIMIT 1; args=(False, 27)
DEBUG 2016-10-04 16:36:44,682 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 28) LIMIT 1; args=(False, 28)
DEBUG 2016-10-04 16:36:44,684 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 29) LIMIT 1; args=(False, 29)
DEBUG 2016-10-04 16:36:44,686 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 30) LIMIT 1; args=(False, 30)
DEBUG 2016-10-04 16:36:44,688 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 31) LIMIT 1; args=(False, 31)
DEBUG 2016-10-04 16:36:44,690 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 32) LIMIT 1; args=(False, 32)
DEBUG 2016-10-04 16:36:44,691 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 33) LIMIT 1; args=(False, 33)
DEBUG 2016-10-04 16:36:44,693 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 34) LIMIT 1; args=(False, 34)
DEBUG 2016-10-04 16:36:44,695 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 35) LIMIT 1; args=(False, 35)
DEBUG 2016-10-04 16:36:44,697 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 36) LIMIT 1; args=(False, 36)
DEBUG 2016-10-04 16:36:44,699 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 37) LIMIT 1; args=(False, 37)
DEBUG 2016-10-04 16:36:44,701 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 38) LIMIT 1; args=(False, 38)
DEBUG 2016-10-04 16:36:44,703 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 39) LIMIT 1; args=(False, 39)
DEBUG 2016-10-04 16:36:44,705 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 40) LIMIT 1; args=(False, 40)
DEBUG 2016-10-04 16:36:44,708 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 41) LIMIT 1; args=(False, 41)
DEBUG 2016-10-04 16:36:44,710 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 42) LIMIT 1; args=(False, 42)
DEBUG 2016-10-04 16:36:44,712 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 43) LIMIT 1; args=(False, 43)
DEBUG 2016-10-04 16:36:44,714 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 44) LIMIT 1; args=(False, 44)
DEBUG 2016-10-04 16:36:44,716 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 45) LIMIT 1; args=(False, 45)
DEBUG 2016-10-04 16:36:44,718 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 46) LIMIT 1; args=(False, 46)
DEBUG 2016-10-04 16:36:44,720 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 47) LIMIT 1; args=(False, 47)
DEBUG 2016-10-04 16:36:44,722 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 48) LIMIT 1; args=(False, 48)
DEBUG 2016-10-04 16:36:44,724 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 49) LIMIT 1; args=(False, 49)
DEBUG 2016-10-04 16:36:44,726 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 50) LIMIT 1; args=(False, 50)
DEBUG 2016-10-04 16:36:44,728 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 1) LIMIT 1; args=(False, 1)
DEBUG 2016-10-04 16:36:44,729 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 2) LIMIT 1; args=(False, 2)
DEBUG 2016-10-04 16:36:44,731 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 3) LIMIT 1; args=(False, 3)
DEBUG 2016-10-04 16:36:44,733 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 4) LIMIT 1; args=(False, 4)
DEBUG 2016-10-04 16:36:44,735 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 5) LIMIT 1; args=(False, 5)
DEBUG 2016-10-04 16:36:44,737 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 6) LIMIT 1; args=(False, 6)
DEBUG 2016-10-04 16:36:44,739 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 7) LIMIT 1; args=(False, 7)
DEBUG 2016-10-04 16:36:44,741 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 8) LIMIT 1; args=(False, 8)
DEBUG 2016-10-04 16:36:44,743 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 9) LIMIT 1; args=(False, 9)
DEBUG 2016-10-04 16:36:44,745 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 10) LIMIT 1; args=(False, 10)
DEBUG 2016-10-04 16:36:44,747 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 11) LIMIT 1; args=(False, 11)
DEBUG 2016-10-04 16:36:44,749 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 12) LIMIT 1; args=(False, 12)
DEBUG 2016-10-04 16:36:44,751 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 13) LIMIT 1; args=(False, 13)
DEBUG 2016-10-04 16:36:44,753 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 14) LIMIT 1; args=(False, 14)
DEBUG 2016-10-04 16:36:44,755 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 15) LIMIT 1; args=(False, 15)
DEBUG 2016-10-04 16:36:44,757 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 16) LIMIT 1; args=(False, 16)
DEBUG 2016-10-04 16:36:44,759 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 17) LIMIT 1; args=(False, 17)
DEBUG 2016-10-04 16:36:44,761 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 18) LIMIT 1; args=(False, 18)
DEBUG 2016-10-04 16:36:44,763 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 19) LIMIT 1; args=(False, 19)
DEBUG 2016-10-04 16:36:44,765 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 20) LIMIT 1; args=(False, 20)
DEBUG 2016-10-04 16:36:44,767 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 21) LIMIT 1; args=(False, 21)
DEBUG 2016-10-04 16:36:44,769 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 22) LIMIT 1; args=(False, 22)
DEBUG 2016-10-04 16:36:44,771 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 23) LIMIT 1; args=(False, 23)
DEBUG 2016-10-04 16:36:44,773 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 24) LIMIT 1; args=(False, 24)
DEBUG 2016-10-04 16:36:44,775 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 25) LIMIT 1; args=(False, 25)
DEBUG 2016-10-04 16:36:44,777 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 26) LIMIT 1; args=(False, 26)
DEBUG 2016-10-04 16:36:44,779 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 27) LIMIT 1; args=(False, 27)
DEBUG 2016-10-04 16:36:44,780 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 28) LIMIT 1; args=(False, 28)
DEBUG 2016-10-04 16:36:44,782 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 29) LIMIT 1; args=(False, 29)
DEBUG 2016-10-04 16:36:44,784 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 30) LIMIT 1; args=(False, 30)
DEBUG 2016-10-04 16:36:44,786 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 31) LIMIT 1; args=(False, 31)
DEBUG 2016-10-04 16:36:44,788 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 32) LIMIT 1; args=(False, 32)
DEBUG 2016-10-04 16:36:44,790 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 33) LIMIT 1; args=(False, 33)
DEBUG 2016-10-04 16:36:44,792 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 34) LIMIT 1; args=(False, 34)
DEBUG 2016-10-04 16:36:44,794 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 35) LIMIT 1; args=(False, 35)
DEBUG 2016-10-04 16:36:44,796 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 36) LIMIT 1; args=(False, 36)
DEBUG 2016-10-04 16:36:44,798 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 37) LIMIT 1; args=(False, 37)
DEBUG 2016-10-04 16:36:44,800 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 38) LIMIT 1; args=(False, 38)
DEBUG 2016-10-04 16:36:44,802 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 39) LIMIT 1; args=(False, 39)
DEBUG 2016-10-04 16:36:44,804 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 40) LIMIT 1; args=(False, 40)
DEBUG 2016-10-04 16:36:44,806 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 41) LIMIT 1; args=(False, 41)
DEBUG 2016-10-04 16:36:44,808 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 42) LIMIT 1; args=(False, 42)
DEBUG 2016-10-04 16:36:44,810 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 43) LIMIT 1; args=(False, 43)
DEBUG 2016-10-04 16:36:44,811 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 44) LIMIT 1; args=(False, 44)
DEBUG 2016-10-04 16:36:44,813 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 45) LIMIT 1; args=(False, 45)
DEBUG 2016-10-04 16:36:44,815 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 46) LIMIT 1; args=(False, 46)
DEBUG 2016-10-04 16:36:44,817 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 47) LIMIT 1; args=(False, 47)
DEBUG 2016-10-04 16:36:44,819 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 48) LIMIT 1; args=(False, 48)
DEBUG 2016-10-04 16:36:44,821 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 49) LIMIT 1; args=(False, 49)
DEBUG 2016-10-04 16:36:44,823 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 50) LIMIT 1; args=(False, 50)
DEBUG 2016-10-04 16:36:44,825 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 1) LIMIT 1; args=(False, 1)
DEBUG 2016-10-04 16:36:44,827 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 2) LIMIT 1; args=(False, 2)
DEBUG 2016-10-04 16:36:44,829 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 3) LIMIT 1; args=(False, 3)
DEBUG 2016-10-04 16:36:44,831 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 4) LIMIT 1; args=(False, 4)
DEBUG 2016-10-04 16:36:44,833 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 5) LIMIT 1; args=(False, 5)
DEBUG 2016-10-04 16:36:44,835 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 6) LIMIT 1; args=(False, 6)
DEBUG 2016-10-04 16:36:44,836 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 7) LIMIT 1; args=(False, 7)
DEBUG 2016-10-04 16:36:44,838 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 8) LIMIT 1; args=(False, 8)
DEBUG 2016-10-04 16:36:44,840 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 9) LIMIT 1; args=(False, 9)
DEBUG 2016-10-04 16:36:44,842 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 10) LIMIT 1; args=(False, 10)
DEBUG 2016-10-04 16:36:44,844 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 11) LIMIT 1; args=(False, 11)
DEBUG 2016-10-04 16:36:44,846 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 12) LIMIT 1; args=(False, 12)
DEBUG 2016-10-04 16:36:44,848 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 13) LIMIT 1; args=(False, 13)
DEBUG 2016-10-04 16:36:44,850 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 14) LIMIT 1; args=(False, 14)
DEBUG 2016-10-04 16:36:44,852 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 15) LIMIT 1; args=(False, 15)
DEBUG 2016-10-04 16:36:44,854 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 16) LIMIT 1; args=(False, 16)
DEBUG 2016-10-04 16:36:44,855 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 17) LIMIT 1; args=(False, 17)
DEBUG 2016-10-04 16:36:44,857 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 18) LIMIT 1; args=(False, 18)
DEBUG 2016-10-04 16:36:44,859 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 19) LIMIT 1; args=(False, 19)
DEBUG 2016-10-04 16:36:44,861 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 20) LIMIT 1; args=(False, 20)
DEBUG 2016-10-04 16:36:44,863 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 21) LIMIT 1; args=(False, 21)
DEBUG 2016-10-04 16:36:44,865 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 22) LIMIT 1; args=(False, 22)
DEBUG 2016-10-04 16:36:44,867 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 23) LIMIT 1; args=(False, 23)
DEBUG 2016-10-04 16:36:44,868 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 24) LIMIT 1; args=(False, 24)
DEBUG 2016-10-04 16:36:44,870 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 25) LIMIT 1; args=(False, 25)
DEBUG 2016-10-04 16:36:44,872 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 26) LIMIT 1; args=(False, 26)
DEBUG 2016-10-04 16:36:44,874 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 27) LIMIT 1; args=(False, 27)
DEBUG 2016-10-04 16:36:44,876 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 28) LIMIT 1; args=(False, 28)
DEBUG 2016-10-04 16:36:44,878 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 29) LIMIT 1; args=(False, 29)
DEBUG 2016-10-04 16:36:44,880 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 30) LIMIT 1; args=(False, 30)
DEBUG 2016-10-04 16:36:44,882 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 31) LIMIT 1; args=(False, 31)
DEBUG 2016-10-04 16:36:44,883 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 32) LIMIT 1; args=(False, 32)
DEBUG 2016-10-04 16:36:44,885 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 33) LIMIT 1; args=(False, 33)
DEBUG 2016-10-04 16:36:44,887 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 34) LIMIT 1; args=(False, 34)
DEBUG 2016-10-04 16:36:44,889 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 35) LIMIT 1; args=(False, 35)
DEBUG 2016-10-04 16:36:44,891 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 36) LIMIT 1; args=(False, 36)
DEBUG 2016-10-04 16:36:44,893 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 37) LIMIT 1; args=(False, 37)
DEBUG 2016-10-04 16:36:44,894 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 38) LIMIT 1; args=(False, 38)
DEBUG 2016-10-04 16:36:44,896 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 39) LIMIT 1; args=(False, 39)
DEBUG 2016-10-04 16:36:44,898 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 40) LIMIT 1; args=(False, 40)
DEBUG 2016-10-04 16:36:44,900 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 41) LIMIT 1; args=(False, 41)
DEBUG 2016-10-04 16:36:44,902 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 42) LIMIT 1; args=(False, 42)
DEBUG 2016-10-04 16:36:44,904 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 43) LIMIT 1; args=(False, 43)
DEBUG 2016-10-04 16:36:44,906 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 44) LIMIT 1; args=(False, 44)
DEBUG 2016-10-04 16:36:44,908 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 45) LIMIT 1; args=(False, 45)
DEBUG 2016-10-04 16:36:44,910 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 46) LIMIT 1; args=(False, 46)
DEBUG 2016-10-04 16:36:44,912 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 47) LIMIT 1; args=(False, 47)
DEBUG 2016-10-04 16:36:44,914 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 48) LIMIT 1; args=(False, 48)
DEBUG 2016-10-04 16:36:44,916 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 49) LIMIT 1; args=(False, 49)
DEBUG 2016-10-04 16:36:44,918 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "events_event" WHERE ("events_event"."deleted" = false AND "events_event"."id" = 50) LIMIT 1; args=(False, 50)
DEBUG 2016-10-04 16:36:44,927 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "articles_article" WHERE ("articles_article"."deleted" = false AND "articles_article"."id" IS NULL) LIMIT 1; args=(False,)
DEBUG 2016-10-04 16:36:44,929 [django.db.backends] (0.001) INSERT INTO "articles_article" ("created_at", "updated_at", "deleted", "created_by_id", "updated_by_id", "require_auth", "title", "description", "text", "slug", "author_id") VALUES ('2016-10-04T16:36:44.925149+00:00'::timestamptz, '2016-10-04T16:36:44.925162+00:00'::timestamptz, false, NULL, NULL, false, 'Ny komité i Abakus', 'Etter langt å lenge har HS endelig blitt enig.', 'Lorem Ipsum er rett og slett dummytekst fra og for trykkeindustrien. Lorem Ipsum har vært bransjens standard for dummytekst helt siden 1500-tallet, da en ukjent boktrykker stokket en mengde bokstaver for å lage et prøveeksemplar av en bok. Lorem Ipsum har tålt tidens tann usedvanlig godt, og har i tillegg til å bestå gjennom fem århundrer også tålt spranget over til elektronisk typografi uten vesentlige endringer. Lorem Ipsum ble gjort allment kjent i 1960-årene ved lanseringen av Letraset-ark med avsnitt fra Lorem Ipsum, og senere med sideombrekkingsprogrammet Aldus PageMaker som tok i bruk nettopp Lorem Ipsum for dummytekst.', NULL, 1) RETURNING "articles_article"."id"; args=(datetime.datetime(2016, 10, 4, 16, 36, 44, 925149, tzinfo=<UTC>), datetime.datetime(2016, 10, 4, 16, 36, 44, 925162, tzinfo=<UTC>), False, None, None, False, 'Ny komité i Abakus', 'Etter langt å lenge har HS endelig blitt enig.', 'Lorem Ipsum er rett og slett dummytekst fra og for trykkeindustrien. Lorem Ipsum har vært bransjens standard for dummytekst helt siden 1500-tallet, da en ukjent boktrykker stokket en mengde bokstaver for å lage et prøveeksemplar av en bok. Lorem Ipsum har tålt tidens tann usedvanlig godt, og har i tillegg til å bestå gjennom fem århundrer også tålt spranget over til elektronisk typografi uten vesentlige endringer. Lorem Ipsum ble gjort allment kjent i 1960-årene ved lanseringen av Letraset-ark med avsnitt fra Lorem Ipsum, og senere med sideombrekkingsprogrammet Aldus PageMaker som tok i bruk nettopp Lorem Ipsum for dummytekst.', None, 1)
DEBUG 2016-10-04 16:36:44,947 [django.db.backends] (0.002) SELECT "users_abakusgroup"."id" FROM "users_abakusgroup" INNER JOIN "articles_article_can_view_groups" ON ("users_abakusgroup"."id" = "articles_article_can_view_groups"."abakusgroup_id") WHERE "articles_article_can_view_groups"."article_id" = 48 ORDER BY "users_abakusgroup"."tree_id" ASC, "users_abakusgroup"."lft" ASC; args=(48,)
DEBUG 2016-10-04 16:36:44,949 [django.db.backends] (0.001) SELECT "articles_article_can_view_groups"."abakusgroup_id" FROM "articles_article_can_view_groups" WHERE ("articles_article_can_view_groups"."abakusgroup_id" IN (1) AND "articles_article_can_view_groups"."article_id" = 48); args=(1, 48)
DEBUG 2016-10-04 16:36:44,951 [django.db.backends] (0.001) INSERT INTO "articles_article_can_view_groups" ("article_id", "abakusgroup_id") VALUES (48, 1) RETURNING "articles_article_can_view_groups"."id"; args=(48, 1)
DEBUG 2016-10-04 16:36:44,958 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "articles_article" WHERE ("articles_article"."deleted" = false AND "articles_article"."id" IS NULL) LIMIT 1; args=(False,)
DEBUG 2016-10-04 16:36:44,960 [django.db.backends] (0.001) INSERT INTO "articles_article" ("created_at", "updated_at", "deleted", "created_by_id", "updated_by_id", "require_auth", "title", "description", "text", "slug", "author_id") VALUES ('2016-10-04T16:36:44.957090+00:00'::timestamptz, '2016-10-04T16:36:44.957110+00:00'::timestamptz, false, NULL, NULL, false, 'Dette er en syk artikkel', 'Eller hur hur hur hur.', 'Lorem Ipsum er rett og slett dummytekst fra og for trykkeindustrien. Lorem Ipsum har vært bransjens standard for dummytekst helt siden 1500-tallet, da en ukjent boktrykker stokket en mengde bokstaver for å lage et prøveeksemplar av en bok. Lorem Ipsum har tålt tidens tann usedvanlig godt, og har i tillegg til å bestå gjennom fem århundrer også tålt spranget over til elektronisk typografi uten vesentlige endringer. Lorem Ipsum ble gjort allment kjent i 1960-årene ved lanseringen av Letraset-ark med avsnitt fra Lorem Ipsum, og senere med sideombrekkingsprogrammet Aldus PageMaker som tok i bruk nettopp Lorem Ipsum for dummytekst.', NULL, 1) RETURNING "articles_article"."id"; args=(datetime.datetime(2016, 10, 4, 16, 36, 44, 957090, tzinfo=<UTC>), datetime.datetime(2016, 10, 4, 16, 36, 44, 957110, tzinfo=<UTC>), False, None, None, False, 'Dette er en syk artikkel', 'Eller hur hur hur hur.', 'Lorem Ipsum er rett og slett dummytekst fra og for trykkeindustrien. Lorem Ipsum har vært bransjens standard for dummytekst helt siden 1500-tallet, da en ukjent boktrykker stokket en mengde bokstaver for å lage et prøveeksemplar av en bok. Lorem Ipsum har tålt tidens tann usedvanlig godt, og har i tillegg til å bestå gjennom fem århundrer også tålt spranget over til elektronisk typografi uten vesentlige endringer. Lorem Ipsum ble gjort allment kjent i 1960-årene ved lanseringen av Letraset-ark med avsnitt fra Lorem Ipsum, og senere med sideombrekkingsprogrammet Aldus PageMaker som tok i bruk nettopp Lorem Ipsum for dummytekst.', None, 1)
DEBUG 2016-10-04 16:36:44,971 [django.db.backends] (0.001) SELECT "users_abakusgroup"."id" FROM "users_abakusgroup" INNER JOIN "articles_article_can_view_groups" ON ("users_abakusgroup"."id" = "articles_article_can_view_groups"."abakusgroup_id") WHERE "articles_article_can_view_groups"."article_id" = 49 ORDER BY "users_abakusgroup"."tree_id" ASC, "users_abakusgroup"."lft" ASC; args=(49,)
DEBUG 2016-10-04 16:36:44,973 [django.db.backends] (0.001) SELECT "articles_article_can_view_groups"."abakusgroup_id" FROM "articles_article_can_view_groups" WHERE ("articles_article_can_view_groups"."abakusgroup_id" IN (1) AND "articles_article_can_view_groups"."article_id" = 49); args=(1, 49)
DEBUG 2016-10-04 16:36:44,974 [django.db.backends] (0.001) INSERT INTO "articles_article_can_view_groups" ("article_id", "abakusgroup_id") VALUES (49, 1) RETURNING "articles_article_can_view_groups"."id"; args=(49, 1)
DEBUG 2016-10-04 16:36:44,986 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "quotes_quote" WHERE ("quotes_quote"."deleted" = false AND "quotes_quote"."id" = 1) LIMIT 1; args=(False, 1)
DEBUG 2016-10-04 16:36:44,988 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "quotes_quote" WHERE ("quotes_quote"."deleted" = false AND "quotes_quote"."id" = 2) LIMIT 1; args=(False, 2)
DEBUG 2016-10-04 16:36:44,990 [django.db.backends] (0.001) SELECT (1) AS "a" FROM "quotes_quote" WHERE ("quotes_quote"."deleted" = false AND "quotes_quote"."id" = 3) LIMIT 1; args=(False, 3)
Loading regular fixtures:
Loading fixture apps/users/fixtures/initial_abakus_groups.yaml
Loading fixture apps/users/fixtures/initial_users.yaml
Loading fixture apps/users/fixtures/initial_memberships.yaml
Loading development fixtures:
Loading fixture apps/users/fixtures/development_users.yaml
Loading fixture apps/bdb/fixtures/development_companies.yaml
Loading fixture apps/events/fixtures/development_events.yaml
Loading fixture apps/articles/fixtures/development_articles.yaml
Loading fixture apps/quotes/fixtures/development_quotes.yaml
Done!
